                                    // Method 1

public class Solution{
    public static int sum(int [][] matrix, int l1, int r1, int l2, int r2){
        int sum = 0;
        for (int i=l1; i<=l2; i++){
            for (int j=r1; j<=r2; j++){
                sum += matrix[i][j];
            }
        } 
        return sum;
    }
}


                                  // Method 2
  
public class Solution{
    public static void findPrefixSum(int [][] matrix){
         int r = matrix.length;
         int c = matrix[0].length;

         for (int i=0; i<r; i++){
             for (int j=1; j<c; j++){
                 matrix[i][j] += matrix[i][j-1];
             }
         }
    }
    public static int sum(int [][] matrix, int l1, int r1, int l2, int r2){
        int sum = 0;
        findPrefixSum(matrix);

        for (int i=l1; i<=l2; i++){
            if (r1 >= 1){
                sum += matrix[i][r2] - matrix[i][r1-1];
            }
            else {
                sum += matrix[i][r2];
            }
        }
    }
}


                                   // Method 3

public class Solution{
    public static void findPrefixSum(int [][] matrix){
         int r = matrix.length;
         int c = matrix[0].length;

         for (int i=0; i<r; i++){
             for (int j=1; j<c; j++){
                 matrix[i][j] += matrix[i][j-1];
             }
         }

         for (int j=0; j<c; j++){
             for (int i=1; i<c; i++){
                 matrix[i][j] += matrix[i-1][j];
             }
         }
    }
    public static int sum(int [][] matrix, int l1, int r1, int l2, int r2){
        int ans = 0, sum = 0, up = 0, left = 0, leftUp = 0;
        findPrefixSum(matrix);

        sum = matrix[l2][r2];

        if (r1 >= 1) up = matrix[l2][r1-1];

        if (l1 >= 1) left = matrix[l1-1][r2];

        if (l1 >= 1 && r1 >= 1) leftUp = matrix[l1-1][r1-1];

        ans = sum - up - left + leftUp;

        return ans;
    }
}
